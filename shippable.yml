#---------------------------------------------------------------#
#------------------------  Test Resources  ---------------------#
#---------------------------------------------------------------#
resources:

##################################################################
#### GKE Test Resources
##################################################################

# gcloud CLI Config
  - name: gcloud_cli
    type: cliConfig
    integration: demo_gke
    pointer:
      region: "us-west1-a"

# BE Container Options
  - name: test_be_options
    type: dockerOptions
    version:
      memory: 128
      portMappings:
        - "6379:6379/tcp"
      labels:
        app: "test_be"

# BE Internal load-balancer
  - name: gke_test_be_lb
    type: loadBalancer
    integration: demo_gke
    pointer:
      sourceName: "test-be-lb"
      method: ClusterIP
      clusterName: "cluster"
      region: "us-west1-a"
    version:
      ports:
        - name: testport
          protocol: TCP
          port: 6379
      selector:
        app: "test_be"

# FE Container Options
  - name: test_fe_options
    type: dockerOptions
    version:
      memory: 128
      portMappings:
        - "80:80/tcp"
      labels:
        app: "test_fe"

# FE External load-balancer
  - name: gke_test_fe_lb
    type: loadBalancer
    integration: demo_gke
    pointer:
      sourceName: "test-fe-lb"
      method: LoadBalancer
      clusterName: "cluster"
      region: "us-west1-a"
    version:
      ports:
        - name: testport
          protocol: TCP
          port: 80
      selector:
        app: "test_fe"

# FE Env Vars
  - name: test_fe_params
    type: params
    version:
      params:
        REDIS: "test-be-lb"

##################################################################
#### BVT Resources
##################################################################

# REPO of BVT Automation scripts
  - name: bvt_repo
    type: gitRepo
    integration: "demo_github"
    versionTemplate:
      sourceName: "aye0aye/test"
      branch: master

# SIT env vars
  - name: bvt_params
    type: params
    versionTemplate:
      params:
        API_URL: "54.158.18.50:8080"
        API_TOKEN: "NA"

###################################################################
##### ECS Test Resources
###################################################################
#
## App TEST env vars
#  - name: ecs_test_params_app
#    type: params
#    versionTemplate:
#      params:
#        ENVIRONMENT: "TEST"
#        PORT: 80

#---------------------------------------------------------------#
#---------------------------  Test Jobs  -----------------------#
#---------------------------------------------------------------#
jobs:

##################################################################
#### GKE App Test Managed Jobs
##################################################################
# BE App Create Template
  - name: appBETemp
    type: manifest
    dependencyMode: strict
    steps:
      - IN: dh_img_app_be
      - IN: test_be_options
      - TASK: managed
    flags:
      - gke
      - cd

# FE App Create Template
  - name: appFETemp
    type: manifest
    dependencyMode: strict
    steps:
      - IN: dh_img_app_fe
      - IN: test_fe_params
      - IN: test_fe_options
      - TASK: managed
    flags:
      - gke
      - cd

# Test Env Deploy
  - name: deployGKEAppTest
    type: deploy
    method: replace
    dependencyMode: strict
    steps:
      - IN: appBETemp
      - IN: appFETemp
      - IN: gke_cluster
      - TASK: managed
    flags:
      - gke
      - cd

# Test LB Provision
  - name: provGKETestLB
    type: provision
    dependencyMode: strict
    steps:
      - IN: gke_test_be_lb
      - IN: gke_test_fe_lb
      - IN: deployGKEAppTest
    flags:
      - gke
      - cd

##################################################################
####  App Build Verification Tests
##################################################################
  - name: auto_bvt
    type: runSh
    dependencyMode: strict
    triggerMode: parallel
    steps:
#      - IN: deployECSAppTest
      - IN: provGKETestLB
      - IN: bvt_repo
        switch: off
      - IN: bvt_params
        switch: off
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "bvt_repo")
            - echo "Starting Testing Env setup"
            - npm install
            - multi="xunit=shippable/testresults/test.xml json=shippable/testresults/test.json" npm run-script test-core
            - echo "Completed Testing Env setup"
            - popd
    flags:
      - cd

##################################################################
#### GKE App Test with Kubectl Jobs
##################################################################
# Test Deploy app with kubectl
  - name: deployGKETestAppKubectl
    type: runSh
    dependencyMode: strict
    steps:
      - IN: gcloud_cli
      - IN: dh_img_app_be
      - IN: dh_img_app_fe
      - IN: gke_cluster
      - IN: bvt_repo
        switch: off
      - TASK:
          runtime:
            options:
              env:
                - FE_LABEL: "kctl-fe-test"
                - BE_LABEL: "kctl-be-test"
          script:
            - pushd $(shipctl get_resource_state "bvt_repo")
            - cd kubeSpecs
            - export BE_IMG=$(shipctl get_resource_version_key dh_img_app_be sourceName)
            - export BE_TAG=$(shipctl get_resource_version_name dh_img_app_be)
            - export FE_IMG=$(shipctl get_resource_version_key dh_img_app_fe sourceName)
            - export FE_TAG=$(shipctl get_resource_version_name dh_img_app_fe)
            - cp bePod.yml.template bePod.yml
            - cp fePod.yml.template fePod.yml
            - shipctl replace bePod.yml fePod.yml
            - export CLUST=$(shipctl get_resource_version_key gke_cluster sourceName)
            - export CLUST_REG=$(shipctl get_resource_version_key gke_cluster region)
            - gcloud container clusters get-credentials $CLUST --zone $CLUST_REG
            - kubectl delete deployment $FE_LABEL 2>/dev/null || echo ""
            - kubectl delete deployment $BE_LABEL 2>/dev/null || echo ""
            - kubectl create -o json -f ./bePod.yml >> kube_output.json
            - kubectl create -o json -f ./fePod.yml >> kube_output.json
            - cat kube_output.json
            - popd
    flags:
      - gke
      - cd

  - name: provGKETestLBKubectl
    type: runSh
    dependencyMode: strict
    steps:
      - IN: deployGKETestAppKubectl
      - IN: gcloud_cli
        switch: off
      - IN: gke_cluster
        switch: off
      - IN: bvt_repo
        switch: off
      - TASK:
          runtime:
            options:
              env:
                - FE_LABEL: "kctl-fe-test"
                - BE_LABEL: "kctl-be-test"
          script:
            - pushd $(shipctl get_resource_state "bvt_repo")
            - cd kubeSpecs
            - cp beSvc.yml.template beSvc.yml
            - cp feSvc.yml.template feSvc.yml
            - shipctl replace beSvc.yml feSvc.yml
            - export CLUST=$(shipctl get_resource_version_key gke_cluster sourceName)
            - export CLUST_REG=$(shipctl get_resource_version_key gke_cluster region)
            - gcloud container clusters get-credentials $CLUST --zone $CLUST_REG
            - kubectl delete service $FE_LABEL 2>/dev/null || echo ""
            - kubectl delete service $BE_LABEL 2>/dev/null || echo ""
            - kubectl create -o json -f ./beSvc.yml >> kube_output.json
            - kubectl create -o json -f ./feSvc.yml >> kube_output.json
            - cat kube_output.json
            - popd
    flags:
      - gke
      - cd

##################################################################
#### GKE App Test Helm Jobs
##################################################################
# Test Deploy app with helm
  - name: deployGKETestAppHelm
    type: runSh
    dependencyMode: strict
    steps:
      - IN: gcloud_cli
      - IN: dh_img_app_be
      - IN: dh_img_app_fe
      - IN: gke_cluster
      - IN: bvt_repo
        switch: off
      - TASK:
          runtime:
            options:
              env:
                - ENVIRONMENT: "test"
          script:
            - pushd $(shipctl get_resource_state "bvt_repo")
            - cd helmCharts
            - export BE_IMG=$(shipctl get_resource_version_key dh_img_app_be sourceName)
            - export BE_TAG=$(shipctl get_resource_version_name dh_img_app_be)
            - export FE_IMG=$(shipctl get_resource_version_key dh_img_app_fe sourceName)
            - export FE_TAG=$(shipctl get_resource_version_name dh_img_app_fe)
            - shipctl replace values.yaml
            - cat values.yaml
            - export CLUST=$(shipctl get_resource_version_key gke_cluster sourceName)
            - export CLUST_REG=$(shipctl get_resource_version_key gke_cluster region)
            - gcloud container clusters get-credentials $CLUST --zone $CLUST_REG
            - which helm
            - helm init
            - helm upgrade --install ./helmCharts
            - popd
    flags:
      - gke
      - cd

###################################################################
##### AWS ECS App Test Jobs
###################################################################
## Trigger TEST Release
#  - name: release_beta_app
#    type: release
#    steps:
#      - IN: manifest_app
#      - IN: seed_version_app
#      - TASK: managed
#        bump: beta
#    flags:
#      - ecs
#      - test
#
## Deploy to TEST environment
#  - name: deployECSAppTest
#    type: deploy
#    dependencyMode: strict
#    triggerMode: parallel
#    steps:
#      - IN: release_beta_app
#        deployName: test_app
#      - IN: ecs_test_params_app
#        switch: off
##      - IN: test_env_ecs
##        switch: off
##      - IN: e2eshipdemo-alb-test
##        applyTo:
##          - manifest: manifest_app
##            image: ecr_img_app
##            port: 80
#      - TASK: managed
#    flags:
#      - ecs
#      - test
